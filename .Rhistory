drift = function(start, numberToGenerate, magnitudeOfChange, probDirectionChange) {
directions = rep(magnitudeOfChange, numberToGenerate - 1)
for (i in 2:(numberToGenerate-1)) {
if(!(runif(1) >= probDirectionChange)) {
directions[i] = (directions[i-1] * -1)
} else {
directions[i] = (directions[i-1])
}
}
builder = c(start)
for (direction in directions) {
start = start + direction
builder = c(builder, start)
}
builder
}
hyperplane = function(num.to.generate, num.attributes, num.with.drift, mag.of.change, noise, prob.direction.change) {
static.weights = runif(num.attributes - num.with.drift)
static.weightz = do.call(rbind, lapply(1:num.to.generate, function(x) { static.weights}))
dynamic.weights = do.call(cbind, lapply(runif(num.with.drift), function(start) { drift(start, num.to.generate, mag.of.change, prob.direction.change)}))
weights = cbind(dynamic.weights, static.weightz)
data = matrix(ncol=num.attributes, nrow=num.to.generate, runif(num.attributes * num.to.generate))
data = as.data.frame(data)
a.zero = apply(weights, 1, function(x) { .5*sum(x) })
classes = apply(data * weights, 1, sum)  < a.zero
# Do everything and then add noise
c = sapply(classes, function(class) { if (runif(1) <= noise) { !class } else class })
data$response = sapply(c, function(boo) { if(boo) {"class1"} else { "class2"}})
list(data=data, weights=weights)
}
# This will generate 15 different datasets of 10000 observations
set.seed(1)
hyperplane.data = hyperplane(10000, 10, 5, 1.0, .2, .1)
write.csv(hyperplane.data$data, paste("hyperplane_0.2_", 10, ".csv", sep=""), row.names=FALSE)
